Create a Database Class and past it


Reference  :::  https://www.youtube.com/watch?v=YkEQKYqBf38&t=10s


import UIKit
import CoreData
class DatabaseHelper: NSObject {

    static let shareInstance = DatabaseHelper()
    let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext
    
    
    func saveCollegeData(collegeDict: [String:String]){
        let college = NSEntityDescription.insertNewObject(forEntityName: "College", into: context) as! College
        college.name = collegeDict["collegeName"]
        college.address = collegeDict["collegeAddress"]
        college.city = collegeDict["collegeCity"]
        college.university = collegeDict["collegeUniversity"]
        
        do{
            try context.save()
        }catch let err{
            print("college save error :- \(err.localizedDescription)")
        }
    }
    
    func getAllCollegeData() -> [College]{
        var arrCollege = [College]()
        let fetchRequest = NSFetchRequest<NSManagedObject>(entityName: "College")
        do{
            arrCollege = try context.fetch(fetchRequest) as! [College]
        }catch let err{
            print("Error in college fetch :- \(err.localizedDescription)")
        }
        return arrCollege
    }
    
    func deleteCollegeData(index: Int) -> [College]{
        var collegeData = self.getAllCollegeData() // GetData
        context.delete(collegeData[index]) // Remove From Coredata
        collegeData.remove(at: index) // Remove in array college
        do{
            try context.save()
        }catch let err{
            print("delete college data :- \(err.localizedDescription)")
        }
        return collegeData
    }
    
    func editCollegeData(collegeDict: [String : String], index:Int){
        var college = self.getAllCollegeData()
    // original data
        college[index].name = collegeDict["collegeName"] // edit data
        college[index].address = collegeDict["collegeAddress"]
        college[index].city = collegeDict["collegeCity"]
        college[index].university = collegeDict["collegeUniversity"]
        do{
            try context.save()
        }catch{
            print("error in edit data")
        }
    }
    
}

///////////                 How to use in TableView       /////////////

import UIKit

class CollegeListViewController: UIViewController {

    @IBOutlet var collegeListtblView: UITableView!
    var arrCollege = [College]()
    
    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        self.arrCollege = DatabaseHelper.shareInstance.getAllCollegeData()
        self.collegeListtblView.reloadData()
    }

    @IBAction func btnCollegeAddClick(_ sender: UIBarButtonItem) {
        let collegeForm = self.storyboard?.instantiateViewController(withIdentifier: "CollegeFormViewController") as! CollegeFormViewController
        self.navigationController?.pushViewController(collegeForm, animated: false)
    }
    
}


extension CollegeListViewController: UITableViewDelegate, UITableViewDataSource{
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return arrCollege.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "CollegeListViewCell", for: indexPath) as! CollegeListViewCell
        let collegedd = arrCollege[indexPath.row]
        cell.lblCollegeName.text = collegedd.name
        cell.lblCollegeCity.text = collegedd.city
        cell.lblCollegeUniversity.text = collegedd.address
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let collegeDetailVC = self.storyboard?.instantiateViewController(withIdentifier: "CollegeDetailViewController") as! CollegeDetailViewController
        collegeDetailVC.collegeDetail = arrCollege[indexPath.row]
        collegeDetailVC.indexRow = indexPath.row
        self.navigationController?.pushViewController(collegeDetailVC, animated: false)
    }
    
    
    func tableView(_ tableView: UITableView, canEditRowAt indexPath: IndexPath) -> Bool {
        return true
    }
    
    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete{
            arrCollege = DatabaseHelper.shareInstance.deleteCollegeData(index: indexPath.row)
            self.collegeListtblView.deleteRows(at: [indexPath], with: .automatic)
        }
    }
}


////////////////////////             For editing 



import UIKit

class CollegeDetailViewController: UITableViewController {

    @IBOutlet var lblCollegename: UILabel!
    @IBOutlet var lblCollegeAddress: UILabel!
    @IBOutlet var lblCollegeCity: UILabel!
    @IBOutlet var lblCollegeUniversity: UILabel!
    var collegeDetail: College?
    var indexRow = Int()
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        lblCollegename.text =  collegeDetail?.name
        lblCollegeCity.text = collegeDetail?.city ?? ""
        lblCollegeUniversity.text = collegeDetail?.university ?? ""
        lblCollegeAddress.text = collegeDetail?.address ?? ""
    }

    @IBAction func btnEditClick(_ sender: UIBarButtonItem) {
        let formVC = self.storyboard?.instantiateViewController(withIdentifier: "CollegeFormViewController") as! CollegeFormViewController
        formVC.isUpdate = true
        formVC.collegeDetails = collegeDetail
        formVC.indexRow = indexRow
        self.navigationController?.pushViewController(formVC, animated: false)
    }
}










